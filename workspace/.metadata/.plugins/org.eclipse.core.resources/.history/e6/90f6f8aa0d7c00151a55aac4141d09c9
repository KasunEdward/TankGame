package data;
import java.io.*;
import java.net.*;

public class Client {

    static String[] brick_cordinates,stone_cordinates,water_cordinates;
     Boot boot=new Boot();
    public static void main(String[] args) throws IOException {
  	Client c=new Client();
c.send();
c.receive();
    }
public void send(){
          try{
    // TODO code application logic here
            Socket client=new Socket("localhost",6000);
            System.out.println("Just connected to " 
		 + client.getRemoteSocketAddress());
         OutputStream os = client.getOutputStream();
            OutputStreamWriter osw = new OutputStreamWriter(os);
            BufferedWriter bw = new BufferedWriter(osw);
 
           
 
            String sendMessage ="JOIN#";
            bw.write(sendMessage);
            bw.flush();
            System.out.println("Message sent to the server : "+sendMessage);
         client.close();
    }catch(Exception e){
     e.printStackTrace();
    }
}
public void receive(){


try{

ServerSocket  s=new ServerSocket(7000);


 
 // now I know how many bytes to read
while(true){
Socket server=s.accept();
DataInputStream din=new DataInputStream(server.getInputStream());  
try{
byte[] theBytes = new byte[1000];

String str2;
str2=new String(theBytes,0,din.read(theBytes));
if(str2.startsWith("I:")){
    String[] types=parseMessageInitiation(str2);
    //String[] brick_cordinates,stone_cordinates,water_cordinates;
    String delimiter="[;]";
    System.out.println("length"+types.length);
    brick_cordinates=types[2].split(delimiter);
    stone_cordinates=types[3].split(delimiter);
    water_cordinates=types[4].split(delimiter);
    boot.BootGame();
    
    
}
System.out.println("Server says: "+str2);  
}finally{
server.close();
}
}


}catch(Exception e){
e.printStackTrace();
}




}

public String[] parseMessageInitiation(String str){
    
    String[] types;
    String delimiter="[:]";
    types=str.split(delimiter);
    for(int i=0;i<types.length;++i){
        System.out.println(types[i]);
    }
   
    return types;
}
}
